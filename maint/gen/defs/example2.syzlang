#import "defs/common.syzlang"

include <fcntl.h>

:ptr[in, bind_sockaddr]	 %{ decode_sockaddr(tcp, $$, (int) tcp->u_arg[1]); %}

bind(sockfd fd, addr ptr[in, bind_sockaddr], addrlen int)

fcntl(filedes fd, cmd xor_flags[fcntl_cmds, F_???], arg string) kernel_ulong_t

fcntl$F_DUPFD(filedes fd, cmd const[F_DUPFD], arg kernel_ulong_t) fd
fcntl$F_DUPFD_CLOEXEC(filedes fd, cmd const[F_DUPFD_CLOEXEC], arg kernel_ulong_t) fd

prctl(option xor_flags[prctl_options, PR_???], arg2 kernel_ulong_t, arg3 kernel_ulong_t, arg4 kernel_ulong_t, arg5 kernel_ulong_t)

prctl$PR_GET_KEEPCAPS(option const[PR_GET_KEEPCAPS], arg2 kernel_ulong_t, arg3 kernel_ulong_t, arg4 kernel_ulong_t, arg5 kernel_ulong_t) kernel_ulong_t
prctl$PR_GET_SECCOMP(option const[PR_GET_SECCOMP], arg2 kernel_ulong_t, arg3 kernel_ulong_t, arg4 kernel_ulong_t, arg5 kernel_ulong_t) kernel_ulong_t
prctl$PR_GET_TIMERSLACK(option const[PR_GET_TIMERSLACK], arg2 kernel_ulong_t, arg3 kernel_ulong_t, arg4 kernel_ulong_t, arg5 kernel_ulong_t) kernel_ulong_t
